package curso.view;

import curso.bean.CursoBean;
import curso.dao.CursoDao;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import professor.bean.ProfessorBean;
import professor.dao.ProfessorDao;
import util.DaoException;

/**
 *
 * @author GRUPO KERNEL
 */
public class JIFCadastroCurso extends javax.swing.JInternalFrame {

    private CursoDao cursoDao = null;
    private ProfessorDao professorDao = null;
    /**
     * Creates new form JIFCurso
     */
    public JIFCadastroCurso() {
        initComponents();
        jTFId.setVisible(false);
        if(cursoDao == null) {
            cursoDao = new CursoDao();
        }
        if (professorDao == null) {
            professorDao = new ProfessorDao();
        }
        
        try {
            jCBCoordenador.setModel(new DefaultComboBoxModel(professorDao.listar().toArray()));
        } catch (Exception ex) {
            System.out.println(ex);
        }
        
        limpar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jBCadastrar = new javax.swing.JButton();
        jBPesquisar = new javax.swing.JButton();
        jBAlterar = new javax.swing.JButton();
        jBLimpar = new javax.swing.JButton();
        jBExcluir = new javax.swing.JButton();
        jBFechar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jTFCodigo = new javax.swing.JTextField();
        jTFNome = new javax.swing.JTextField();
        jTFSigla = new javax.swing.JTextField();
        jTFCargaHoraria = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jCBCoordenador = new javax.swing.JComboBox();
        jTFId = new javax.swing.JTextField();

        setTitle("Cadastro de Curso");

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jBCadastrar.setMnemonic('c');
        jBCadastrar.setText("Cadastrar");
        jBCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCadastrarActionPerformed(evt);
            }
        });

        jBPesquisar.setMnemonic('p');
        jBPesquisar.setText("Pesquisar");
        jBPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPesquisarActionPerformed(evt);
            }
        });

        jBAlterar.setMnemonic('a');
        jBAlterar.setText("Alterar");
        jBAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAlterarActionPerformed(evt);
            }
        });

        jBLimpar.setMnemonic('l');
        jBLimpar.setText("Limpar");
        jBLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLimparActionPerformed(evt);
            }
        });

        jBExcluir.setMnemonic('e');
        jBExcluir.setText("Excluir");
        jBExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExcluirActionPerformed(evt);
            }
        });

        jBFechar.setMnemonic('f');
        jBFechar.setText("Fechar");
        jBFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBFecharActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jBCadastrar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBPesquisar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBAlterar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBLimpar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBExcluir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBFechar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jBCadastrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBPesquisar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBAlterar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBLimpar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBFechar)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        jLabel1.setText("Código*:");

        jLabel2.setText("Nome*:");

        jLabel3.setText("Sigla*:");

        jLabel4.setText("Carga Horária:");

        jLabel5.setText("Coordenador*:");

        jCBCoordenador.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jTFId.setText("id");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTFNome)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTFSigla, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTFCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTFId, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTFCargaHoraria, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCBCoordenador, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 92, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jTFId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTFCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTFNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTFSigla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTFCargaHoraria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jCBCoordenador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBFecharActionPerformed
        fechar();
    }//GEN-LAST:event_jBFecharActionPerformed

    private void jBCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCadastrarActionPerformed
        cadastrar();
    }//GEN-LAST:event_jBCadastrarActionPerformed

    private void jBPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPesquisarActionPerformed
        pesquisar();
    }//GEN-LAST:event_jBPesquisarActionPerformed

    private void jBAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAlterarActionPerformed
        alterar();
    }//GEN-LAST:event_jBAlterarActionPerformed

    private void jBLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLimparActionPerformed
        limpar();
    }//GEN-LAST:event_jBLimparActionPerformed

    private void jBExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExcluirActionPerformed
        excluir();
    }//GEN-LAST:event_jBExcluirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAlterar;
    private javax.swing.JButton jBCadastrar;
    private javax.swing.JButton jBExcluir;
    private javax.swing.JButton jBFechar;
    private javax.swing.JButton jBLimpar;
    private javax.swing.JButton jBPesquisar;
    private javax.swing.JComboBox jCBCoordenador;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField jTFCargaHoraria;
    private javax.swing.JTextField jTFCodigo;
    private javax.swing.JTextField jTFId;
    private javax.swing.JTextField jTFNome;
    private javax.swing.JTextField jTFSigla;
    // End of variables declaration//GEN-END:variables

    private void fechar() {
        if (verificaPreenchido()) {
            int o = JOptionPane.showConfirmDialog(this, "Há dados preenchidos! Deseja realmente sair?", "Mensagem", JOptionPane.YES_OPTION);
            if (o == 0) {
                dispose();
            }
        } else {
            dispose();
        }
    }
    
    private boolean verificaPreenchido() {
        if (!(jCBCoordenador.getSelectedIndex() == -1) || !(jTFCodigo.getText().isEmpty()) || !(jTFNome.getText().isEmpty()) || !(jTFSigla.getText().isEmpty()) || !(jTFCargaHoraria.getText().isEmpty())) {
            return true;
        } else {
            return false;
        }
    }

    private void limpar() {
        jTFCodigo.setText("");
        jTFNome.setText("");
        jTFSigla.setText("");
        jTFCargaHoraria.setText("");
        jCBCoordenador.setSelectedIndex(-1);
    }

    private void cadastrar() {
        CursoBean cursoBean = populaCursoBean();
        
        if(cursoBean != null) {
            try {
                if(cursoDao.inserir(cursoBean) != null) {
                    JOptionPane.showMessageDialog(rootPane, "Curso cadastrado com sucesso!");
                    limpar();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Erro ao cadastrar!");
                }
            } catch (DaoException ex) {
                Logger.getLogger(JIFCadastroCurso.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private CursoBean populaCursoBean() {
        CursoBean cursoBean;
        ProfessorBean professorBean;
        
        if(validaPreenchimento()) {
            cursoBean = new CursoBean();
            cursoBean.setCodigo(jTFCodigo.getText());
            cursoBean.setNome(jTFNome.getText());
            cursoBean.setSigla(jTFSigla.getText());
            cursoBean.setCargaHoraria(Integer.parseInt(jTFCargaHoraria.getText()));
            
            professorBean = new ProfessorBean();
            professorBean = (ProfessorBean) jCBCoordenador.getSelectedItem();
            
            cursoBean.setCoordenador(professorBean);
            return cursoBean;
        }
        return null;
    }

    private boolean validaPreenchimento() {
        if(jTFCodigo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Informe o código");
            jTFCodigo.grabFocus();
            return false;
        } else if (jTFNome.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Informe o nome");
            jTFNome.grabFocus();
            return false;
        } else if (jTFSigla.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Informe a sigla");
            jTFSigla.grabFocus();
            return false;
        } else if (jCBCoordenador.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(rootPane, "Selecione o coordenador");
            jCBCoordenador.grabFocus();
            return false;
        }
        return true;
    }

    private void pesquisar() {
        int codigo = Integer.parseInt(JOptionPane.showInputDialog("Informe o código do curso."));
        try {
            CursoBean cursoBean = cursoDao.selecionar(codigo);
            if (cursoBean == null) {
                JOptionPane.showMessageDialog(rootPane, "Curso não encontrado!");
                limpar();
            } else {
                popularFormUsuario(cursoBean);
            }
        } catch (DaoException ex) {
            Logger.getLogger(JIFCadastroCurso.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void popularFormUsuario(CursoBean cursoBean) {
        jTFId.setText(cursoBean.getId().toString());
        jTFCodigo.setText(cursoBean.getCodigo());
        jTFNome.setText(cursoBean.getNome());
        jTFSigla.setText(cursoBean.getSigla());
        jTFCargaHoraria.setText(cursoBean.getCargaHoraria().toString());
        
        ProfessorDao pd = new ProfessorDao();
        ArrayList<ProfessorBean> professores;
        try {
            professores = (ArrayList<ProfessorBean>) pd.listar();
            for (int i = 0; i < professores.size(); i++) {
                if (professores.get(i).getId().equals(cursoBean.getCoordenador().getId()) && professores.get(i).getNome().equals(cursoBean.getCoordenador().getNome())) {
                    jCBCoordenador.setSelectedIndex(i);
                }
            }
        } catch (DaoException ex) {
            Logger.getLogger(JIFCadastroCurso.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void alterar() {
        CursoBean cursoBean = populaCursoBean2();
        
        if(cursoBean != null) {
            try {
                if(cursoDao.alterar(cursoBean) != null) {
                    JOptionPane.showMessageDialog(rootPane, "Curso alterado com sucesso!");
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Erro ao alterar!");
                }
            } catch (DaoException ex) {
                Logger.getLogger(JIFCadastroCurso.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private CursoBean populaCursoBean2() {
        CursoBean cursoBean;
        ProfessorBean professorBean;
        
        if(validaPreenchimento()) {
            cursoBean = new CursoBean();
            cursoBean.setId(Integer.parseInt(jTFId.getText()));
            cursoBean.setCodigo(jTFCodigo.getText());
            cursoBean.setNome(jTFNome.getText());
            cursoBean.setSigla(jTFSigla.getText());
            cursoBean.setCargaHoraria(Integer.parseInt(jTFCargaHoraria.getText()));
            
            professorBean = new ProfessorBean();
            professorBean = (ProfessorBean) jCBCoordenador.getSelectedItem();
            
            cursoBean.setCoordenador(professorBean);
            return cursoBean;
        }
        return null;
    }

    private void excluir() {
        if (!jTFId.getText().isEmpty()) {
            int codigo = Integer.parseInt(jTFId.getText());
            try {
                if (cursoDao.excluir(codigo)) {
                    JOptionPane.showMessageDialog(rootPane, "Curso excluído!");
                    limpar();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Erro ao excluir!");
                }
            } catch (DaoException ex) {
                Logger.getLogger(JIFCadastroCurso.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Erro ao excluir!");
        }
    }
}
